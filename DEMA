
import pandas as pd
import pandas_datareader.data as web
import datetime as dt
import pickle
import os
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import style
import timeit
style.use('ggplot')
start = dt.datetime(2020,1,1)
end = dt.date.today()
with open('nifty50.pickle','rb') as f:  #TICKERS OF TOP 50 COMPANIES IN NSE
    tickers=pickle.load(f)
if not os.path.exists('stock_df2'):
    os.makedirs('stock_df2')
    
for ticker in tickers:
     if not os.path.exists('stock_df2/{}.csv'.format(ticker)):
        df= web.DataReader(ticker, 'yahoo', start , end)
        df['return'] = (df['Adj Close'] -df['Adj Close'].shift(1, fill_value= df['Adj Close'][0]))/df['Adj Close'].shift(1, fill_value= df['Adj Close'][0]) *100
        df.to_csv('stock_df2/{}.csv'.format(ticker)) 
buy_sell_hold= []
buy_sell_hold= pd.DataFrame()
for ticker in tickers:
    df= pd.read_csv('stock_df2/{}.csv'.format(ticker))
    df.index= df['Date']
    
    df['EMA21']= 0
    df['EMA21'][20] = df['Adj Close'][:20].mean()
    df['EMA55']= 0
    df['EMA55'][54] = df['Adj Close'][:54].mean()
    
    df['DEMA21']= 0
    df['DEMA21'][20] = df['Adj Close'][:20].mean()
    df['DEMA55']= 0
    df['DEMA55'][54] = df['Adj Close'][:54].mean()
    
    for i in range(20,len(df)):
        
            df['EMA21'][i]= 2/22*df['Adj Close'][i]+ df['EMA21'][i-1]*20/22
            
            df['DEMA21'][i]= 2*df['EMA21'][i] - 2/22*df['EMA21'][i]- df['DEMA21'][i-1]*20/22            
            
            if i> 54:
                df['EMA55'][i]= 2/56*df['Adj Close'][i]+ df['EMA55'][i-1]*54/56
                
                df['DEMA55'][i]= 2*df['EMA55'][i] - 2/56*df['EMA55'][i]- df['DEMA55'][i-1]*54/56
    
    df['signal']= df['DEMA21']- df['DEMA55']>0
    df['DEMA_{}'.format(ticker)] = df['signal'] - df['signal'].shift(1, fill_value=0)
                        
    df.rename(columns= {'Adj Close': ticker},inplace=True)        
    buy_sell_hold= buy_sell_hold.join(df['{}'.format(ticker)][55:] , how='outer')
    buy_sell_hold= buy_sell_hold.join(df['DEMA_{}'.format(ticker)][55:] , how='outer')
â€‹
buy_sell_hold
if not os.path.exists('buy_sell_hold1.csv'):
    buy_sell_hold.to_csv('buy_sell_hold1.csv')
